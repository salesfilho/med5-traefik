version: '3.8'

services:
  traefik:
    image: traefik:3.4
    container_name: traefik
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml
      - ./letsencrypt:/letsencrypt
    environment:
      - TZ=America/Sao_Paulo
    networks:
      - med5-network
    labels:
      - "traefik.enable=true"
      - "traefik.web.routers.traefik.rule=Host(`monitor.med5.com.br`)"
      - "traefik.web.routers.traefik.service=api@internal"
      - "traefik.web.routers.traefik.entrypoints=websecure"
      - "traefik.web.routers.traefik.tls=true"
      - "traefik.web.routers.traefik.tls.certresolver=myresolver"
      - "traefik.web.routers.traefik.middlewares=authtraefik"

  # Backend API
  api:
    image: 761160219175.dkr.ecr.us-east-1.amazonaws.com/med5/backend:test
    container_name: med5-api
    restart: unless-stopped
    env_file:
      - ./.env

    labels:
      - "traefik.enable=true"
      - "traefik.web.routers.api.rule=Host(`h-backend.med5.com.br`) || PathPrefix(`/api`)"
      - "traefik.web.routers.api.entrypoints=https"
      - "traefik.web.routers.api.tls.certresolver=letsencrypt"
      - "traefik.web.routers.api.middlewares=secure-headers,api-strip-prefix,rate-limit"
      - "traefik.web.services.api.loadbalancer.server.port=8000" # Ajuste conforme sua API
    networks:
      - med5-network
    depends_on:
      - redis
      - traefik

  # Frontends (exemplo para app, repita para outros)
  app:
    image: 761160219175.dkr.ecr.us-east-1.amazonaws.com/med5/app:test
    container_name: med5-app
    restart: unless-stopped
    environment:
      - API_URL=https://api.med5.exemplo.com
    labels:
      - "traefik.enable=true"
      - "traefik.web.routers.app.rule=Host(`h-app.med5.com.br`)"
      - "traefik.web.routers.app.entrypoints=https"
      - "traefik.web.routers.app.tls.certresolver=letsencrypt"
      - "traefik.web.routers.app.middlewares=secure-headers"
      - "traefik.web.services.app.loadbalancer.server.port=80"
    networks:
      - med5-network
    depends_on:
      - api
      - traefik

  # Redis
  redis:
    image: redis:alpine
    container_name: med5-redis
    restart: unless-stopped
    volumes:
      - redis_data:/data
    networks:
      - med5-network

networks:
  med5-network:
    driver: bridge

volumes:
  redis_data:
    driver: local